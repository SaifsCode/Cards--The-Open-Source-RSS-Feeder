<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Curated RSS Feed</title>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Gudea:ital,wght@0,400;0,700;1,400&display=swap">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <style>
    body {
      font-family: 'Gudea', sans-serif;
      background-color: #ffffff;
      margin: 0;
      padding: 20px;
      color: #2c73b3;
    }
    body.dark-mode {
      background-color: #121212;
      color: #e0e0e0;
    }
    .dark-mode .feed-card {
      background-color: #1e1e1e;
      color: #e0e0e0;
    }
    .dark-mode .feed-date,
    .dark-mode .share-icons a {
      color: #aaa;
    }
    .dark-mode .tag {
      background-color: #555;
    }
    .toggle-dark {
      position: fixed;
      top: 10px;
      right: 10px;
      background: #2c73b3;
      color: white;
      border: none;
      border-radius: 6px;
      padding: 6px 12px;
      cursor: pointer;
      font-size: 14px;
    }
    .feed-container {
      column-count: 3;
      column-gap: 20px;
      max-width: 1200px;
      margin: 0 auto;
    }
    .feed-card {
      background-color: #f5f5f5;
      border-radius: 12px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      display: inline-block;
      width: 100%;
      margin: 0 0 20px;
      transition: transform 0.2s;
      cursor: pointer;
    }
    .feed-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
    }
    .feed-card img {
      width: 100%;
      height: auto;
      object-fit: cover;
      display: block;
    }
    .feed-content {
      padding: 15px;
      display: flex;
      flex-direction: column;
      flex-grow: 1;
    }
    .feed-title {
      font-size: 18px;
      font-weight: 600;
      margin: 0 0 6px;
    }
    .feed-date {
      font-size: 12px;
      color: #666;
      margin-bottom: 10px;
    }
    .feed-desc {
      font-size: 14px;
      font-weight: 600;
    }
    .feed-actions {
      display: flex;
      justify-content: flex-end;
      align-items: center;
      padding: 10px 15px;
    }
    .share-icons a {
      margin-right: 10px;
      color: #2c73b3;
      font-size: 16px;
      text-decoration: none;
    }
    .load-more {
      display: block;
      margin: 30px auto 0;
      padding: 10px 20px;
      font-size: 22px;
      font-family: 'Gudea', sans-serif;
      color: #2c73b3;
      background: transparent;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-weight: bold;
    }
    .scroll-top {
      position: fixed;
      bottom: 30px;
      right: 30px;
      background-color: #2c73b3;
      color: white;
      border: none;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      font-size: 20px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      box-shadow: 0 2px 6px rgba(0,0,0,0.2);
      display: none;
    }
    .scroll-top:hover {
      background-color: #1e5c91;
    }
    .tag {
      font-size: 12px;
      font-weight: bold;
      background: #2c73b3;
      color: white;
      padding: 4px 8px;
      border-radius: 4px;
      margin-bottom: 8px;
      display: inline-block;
      text-transform: uppercase;
    }
    .no-posts {
      text-align: center;
      font-size: 18px;
      font-weight: bold;
      margin-top: 50px;
      color: #999;
    }
    @media (max-width: 768px) {
      .feed-container {
        column-count: 1;
      }
    }
  </style>
</head>
<body>
  <button class="toggle-dark" onclick="toggleDarkMode()">Toggle Dark Mode</button>
  <div class="feed-container" id="feedContainer"></div>
  <div class="no-posts" id="noPosts" style="display:none;">No posts found from the sources. Please try again later.</div>
  <button class="load-more" id="loadMore">Load More</button>
  <button class="scroll-top" id="scrollTop" title="Scroll to top">&#8679;</button>

  <script>
    const feedUrls = [
      'https://www.labnol.org/rss.xml',
      'https://techcrunch.com/feed/',
      'https://www.sciencedaily.com/rss/top.xml',
      'https://yourstory.com/feed',
      'https://fossbytes.com/feed/?x=1',
      'https://techpp.com/feed/',
      'https://itechhacks.com/feed/',
      'https://feeds.feedburner.com/techgyd',
      'https://www.wired.com/feed/rss',
      'https://mashable.com/feeds/rss/all'
    ];

    // List of parsers (round-robin fallback)
    const parsers = [
      url => `https://api.rss2json.com/v1/api.json?rss_url=${encodeURIComponent(url)}`,
      url => `https://api.allorigins.win/get?url=${encodeURIComponent(url)}`,
      url => `https://api.codetabs.com/v1/proxy/?quest=${encodeURIComponent(url)}`
    ];

    async function fetchWithFallback(feedUrl) {
      for (let buildUrl of parsers) {
        try {
          const res = await fetch(buildUrl(feedUrl));
          if (!res.ok) continue;
          const data = await res.json();
          if (data && data.items) return data.items;
          if (data.contents) {
            const json = JSON.parse(data.contents);
            if (json.items) return json.items;
          }
        } catch (e) {
          continue; // Try next parser
        }
      }
      return [];
    }

    async function fetchFeed(feedUrl) {
      return await fetchWithFallback(feedUrl);
    }

    const maxCards = 60;
    let posts = [], shown = 0, batch = 15;
    const container = document.getElementById('feedContainer');
    const loadBtn = document.getElementById('loadMore');
    const scrollTopBtn = document.getElementById('scrollTop');
    const noPostsMsg = document.getElementById('noPosts');

    async function loadFeeds() {
      try {
        const feedPromises = feedUrls.map(url => fetchFeed(url));
        const allFeeds = await Promise.all(feedPromises);
        let merged = allFeeds.flat();
        const seen = new Set();
        posts = merged.filter(item => {
          const key = item.title.toLowerCase().trim();
          if (seen.has(key)) return false;
          seen.add(key);
          return true;
        }).sort((a, b) => new Date(b.pubDate) - new Date(a.pubDate));

        if (posts.length === 0) {
          noPostsMsg.style.display = 'block';
          loadBtn.style.display = 'none';
        } else {
          showNextBatch();
        }
      } catch (err) {
        console.error("Error fetching feeds:", err);
        noPostsMsg.style.display = 'block';
        loadBtn.style.display = 'none';
      }
    }

    function toggleDarkMode() {
      document.body.classList.toggle('dark-mode');
    }

    function timeAgo(dateStr) {
      const seconds = Math.floor((new Date() - new Date(dateStr)) / 1000);
      const intervals = [
        { label: 'd', seconds: 86400 },
        { label: 'h', seconds: 3600 },
        { label: 'm', seconds: 60 }
      ];
      for (let { label, seconds: s } of intervals) {
        const count = Math.floor(seconds / s);
        if (count >= 1) return `${count}${label}`;
      }
      return 'just now';
    }

    function extractSource(url) {
      try {
        const hostname = new URL(url).hostname;
        return hostname.replace('www.', '').split('.')[0];
      } catch {
        return 'Source';
      }
    }

    function showNextBatch() {
      const next = posts.slice(shown, shown + batch);
      next.forEach(post => container.appendChild(createCard(post)));
      shown += next.length;
      if (shown >= posts.length || shown >= maxCards) loadBtn.style.display = 'none';
    }

    function createCard(post) {
      const card = document.createElement('div');
      card.className = 'feed-card';
      card.onclick = () => window.open(post.link, '_blank');

      if (post.thumbnail && !post.thumbnail.includes('default') && !post.thumbnail.includes('rss')) {
        const img = document.createElement('img');
        img.src = post.thumbnail;
        img.onerror = () => img.remove();
        card.appendChild(img);
      }

      const content = document.createElement('div');
      content.className = 'feed-content';

      const tag = document.createElement('div');
      tag.className = 'tag';
      tag.textContent = extractSource(post.link);

      const title = document.createElement('h3');
      title.className = 'feed-title';
      title.textContent = post.title;

      const time = document.createElement('span');
      time.className = 'feed-date';
      time.textContent = timeAgo(post.pubDate);

      const desc = document.createElement('p');
      desc.className = 'feed-desc';
      desc.textContent = post.description.replace(/<[^>]*>/g, '').slice(0, 150) + '...';

      const actions = document.createElement('div');
      actions.className = 'feed-actions';

      const share = document.createElement('div');
      share.className = 'share-icons';
      const shareUrl = encodeURIComponent(post.link);
      const shareTitle = encodeURIComponent(post.title);

      share.innerHTML = `
        <a href="https://www.facebook.com/sharer/sharer.php?u=${shareUrl}" target="_blank"><i class="fab fa-facebook"></i></a>
        <a href="https://twitter.com/intent/tweet?text=${shareTitle}&url=${shareUrl}" target="_blank"><i class="fab fa-twitter"></i></a>
        <a href="https://www.linkedin.com/shareArticle?mini=true&url=${shareUrl}" target="_blank"><i class="fab fa-linkedin"></i></a>
        <a href="https://wa.me/?text=${shareTitle}%20${shareUrl}" target="_blank"><i class="fab fa-whatsapp"></i></a>
        <a href="https://reddit.com/submit?url=${shareUrl}&title=${shareTitle}" target="_blank"><i class="fab fa-reddit"></i></a>
        <a href="https://t.me/share/url?url=${shareUrl}&text=${shareTitle}" target="_blank"><i class="fab fa-telegram"></i></a>
        <a href="mailto:?subject=${shareTitle}&body=${shareUrl}" target="_blank"><i class="fas fa-envelope"></i></a>
      `;

      content.appendChild(tag);
      content.appendChild(title);
      content.appendChild(time);
      content.appendChild(desc);
      actions.appendChild(share);
      card.appendChild(content);
      card.appendChild(actions);

      return card;
    }

    loadBtn.addEventListener('click', showNextBatch);
    loadFeeds();

    window.addEventListener('scroll', () => {
      scrollTopBtn.style.display = window.scrollY > 200 ? 'flex' : 'none';
    });

    scrollTopBtn.addEventListener('click', () => {
      window.scrollTo({ top: 0, behavior: 'smooth' });
    });
  </script>
</body>
</html>

